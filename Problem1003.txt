一、实验目的
  实现队列的基本操作。

二、实验内容
  用栈实现先进先出队列的基本操作，包括：

  （1）EnQueue 将元素插入到队列的尾部

  （2）DeQueue 获取并移除队列头元素

  （3）GetHead 获取队列开头的元素

  （4）QueueEmpty 判断队列是否为空

  并实现辅助接口 QueueToArray 将队列中元素按照从头到尾的顺序写到数组中。并且思考：怎么使用两个栈能使连续的EnQueue / DeQueue效率最高？

三、输入输出格式
  单次输入一行为一个独立的指令，一行中是一个或几个整型参数，用空格隔开。第一个参数是指令，4-7对应上述四种操作，-1表示退出程序。

（1）EnQueue 将元素插入到队列的尾

  输入：第二个参数为操作次数，后续参数为数据

4 7 0 1 2 3 4 5 6  /*入队7次，数据为0、1、2、3、4、5、6*/
  输出：队列的全部元素（队头到队尾，用空格隔开）

Queue: 0 1 2 3 4 5 6
（2）DeQueue 获取并移除队列头元素

  输入：第二个参数为操作次数

5 3 /*弹出队头元素并获取*/
  输出：弹出的队头元素和队列的剩下元素（队头到队尾，用空格隔开）

// 弹出成功
DeQueue: 0
Queue: 1 2 3 4 5 6
DeQueue: 1
Queue: 2 3 4 5 6
DeQueue: 2
Queue: 3 4 5 6
// 弹出失败
DeQueue failed  /*失败了几次就会打印几次该信息*/
（3）GetHead 获取队列开头的元素

  输入：

6  /*获取队头元素*/
  输出：队头元素和队列的剩下元素（队头到队尾，用空格隔开）

// 获取成功
GetHead: 3
Queue: 3 4 5 6
// 获取失败
GetHead failed
（4）QueueEmpty 判断队列是否为空

  输入：

7  /*判断队列是否为空*/
  输出：

// 队列空
The Queue is Empty
// 队列非空
The Queue is not Empty
Queue: 3 4 5 6